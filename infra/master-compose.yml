version: '3.8'

services:
  db:
    image: postgres:16-alpine
    container_name: project-db
    environment:
      - POSTGRES_DB=projectdb
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - project-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: ../backend
      dockerfile: Dockerfile
    container_name: project-api
    ports:
      - "8080:8080"
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=projectdb
      - DB_USER=postgres
      - DB_PASSWORD=postgres
    depends_on:
      db:
        condition: service_healthy
    networks:
      - project-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/api/projects || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  web:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    container_name: project-web
    ports:
      - "3000:3000"
    environment:
      - API_BASE_URL=http://api:8080
    depends_on:
      api:
        condition: service_healthy
    networks:
      - project-network

networks:
  project-network:
    driver: bridge

volumes:
  postgres-data:
